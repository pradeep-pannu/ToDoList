/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package todo.list.ui;


import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import todo.list.TaskDetails;
import todo.list.Unmarshalling;

/**
 *
 * @author pradeep.ae.kumar
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ToDoList_V2.0");
        setBackground(new java.awt.Color(255, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Adobe Devanagari", 0, 10)); // NOI18N
        setForeground(new java.awt.Color(0, 0, 255));
        setLocation(new java.awt.Point(0, 0));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Sun");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Mon");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Tue");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Wed");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Thu");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Fri");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("Sat");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setText("Add Task");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton9.setText("Favourite");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton10.setText("End of Month");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No.", "Task", "Type", "Category", "Sub-cat", "Priority", "Link", "URL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        Font f = new Font("Arial", Font.BOLD, 12);
        JTableHeader header = jTable2.getTableHeader();
        header.setFont(f);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton11.setText("Delete Task");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Date: "+dateFormat.format(new Date()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton8)
                                .addGap(32, 32, 32)
                                .addComponent(jButton11)
                                .addGap(39, 39, 39))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton11))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        GetTaskFrame obj = new GetTaskFrame();
        obj.setVisible(true);
       
       // this.dispose();
        
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        //System.out.println(task_list.size());
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Sunday")){
               sunday_tasks.add(nextElement);
            }
        }
              
          
          DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
          model.setRowCount(0);
          Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
           
      
    }//GEN-LAST:event_jButton1MouseClicked

   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void resetButtonColor(){
        jButton1.setBackground(Color.LIGHT_GRAY);
        jButton2.setBackground(Color.LIGHT_GRAY);
        jButton3.setBackground(Color.LIGHT_GRAY);
        jButton4.setBackground(Color.LIGHT_GRAY);
        jButton5.setBackground(Color.LIGHT_GRAY);
        jButton6.setBackground(Color.LIGHT_GRAY);
        jButton7.setBackground(Color.LIGHT_GRAY);
        jButton10.setBackground(Color.LIGHT_GRAY);
        jButton9.setBackground(Color.LIGHT_GRAY);
        
        
    }
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        
        
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        //System.out.println(task_list.size());
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Monday")){
               sunday_tasks.add(nextElement);
            }
           
           
            }
                   
          
          DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
          model.setRowCount(0);
          
          Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
      
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Tuesday")){
               sunday_tasks.add(nextElement);
            }
           
           
            }
                   
          
          DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
          model.setRowCount(0);
          Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
               model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        //System.out.println(task_list.size());
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Wednesday")){
               sunday_tasks.add(nextElement);
            }
        }
                   
          
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        //System.out.println(task_list.size());
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Thursday")){
               sunday_tasks.add(nextElement);
            }
        }
                   
          
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
       
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Friday")){
               sunday_tasks.add(nextElement);
            }
        }
                   
          
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked

        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Saturday")){
               sunday_tasks.add(nextElement);
            }
        }
                   
          
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton7MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
      
            
            if (evt.getClickCount() == 2) {
                JTable jTable2 = (JTable) evt.getSource();
                int selectedRow = jTable2.getSelectedRow();
                
                String loc = (String) jTable2.getValueAt(selectedRow, 6);
                if(!loc.isEmpty()){
                String loc1 = loc.replace("\\", "\\");
                //System.out.println(loc);
               try {
                   
                   //Desktop.getDesktop().open(new File((String) jTable2.getValueAt(selectedRow, 3)));
                   
                   Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+loc);
                   
//                    try {
//                        p.waitFor();
//                    } catch (InterruptedException ex) {
//                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                   }
                }catch (IOException e1) {
                   e1.printStackTrace();
               }
               
            }
            else
                {
                    loc = (String) jTable2.getValueAt(selectedRow, 7);
                if(!loc.isEmpty()){
               // String loc1 = loc.replace("\\", "\\");
                //System.out.println(loc);
               try {
                   int count=1;
                   //Desktop.getDesktop().open(new File((String) jTable2.getValueAt(selectedRow, 3)));
                   while(count>0){
                   Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+loc);
                   count--;
//                    try {
//                        p.waitFor();
//                    } catch (InterruptedException ex) {
//                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                   }
                   } }catch (IOException e1) {
                   e1.printStackTrace();
               }
               
            }
                } 
               
            }
            
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("Favourite")){
               sunday_tasks.add(nextElement);
            }
        }
                   
          
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object [] row = new Object[8];
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
            row [0]=j++;
            row [1]= sunday_tasks.get(i).getTask_name();
            row [2]= sunday_tasks.get(i).getTask_type();
            row [3]= sunday_tasks.get(i).getTask_category();
            row [4]= sunday_tasks.get(i).getTask_sub_cat();
            row [5]= sunday_tasks.get(i).getTask_priority();
            row [6]= sunday_tasks.get(i).getTask_link();
            row [7]= sunday_tasks.get(i).getTask_url();
            model.addRow(row);
           }
 
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        
        resetButtonColor();
        ((JButton) evt.getSource()).setBackground(Color.BLUE);
        Unmarshalling unm = new Unmarshalling();
        
        List <TaskDetails>  task_list = new ArrayList<>();
        task_list=unm.retriveFromXML();
        Iterator itr = task_list.iterator();
        List <TaskDetails> sunday_tasks = new ArrayList<TaskDetails>();
        while(itr.hasNext()) {
           TaskDetails nextElement = (TaskDetails) itr.next();
           
           if(nextElement.getTask_day().equalsIgnoreCase("End of Month")){
               sunday_tasks.add(nextElement);
            }
        }
                   
          
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object [] row = new Object[8];
        
          int j=1;
          for(int i=0;i<sunday_tasks.size();i++){
//            JButton jButton12 = new JButton();
//            jButton12.setText("Press Me");
//             
//            Action delete;
//                delete = new AbstractAction()
//                {
//                    @Override
//                    public void actionPerformed(ActionEvent  e)
//                    {
//                        
//                        int selectedRow = jTable2.getSelectedRow();
//                        String loc = (String) jTable2.getValueAt(selectedRow, 7);
//                        System.out.println(loc);
//                        //Desktop.getDesktop().open(new File((String) jTable2.getValueAt(selectedRow, 3)));
////                        Process p;
////                        try {
////                            p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+loc);
////                            //p.waitFor();
////                        } catch (IOException ex) {
////                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//////                        } catch (InterruptedException ex) {
//////                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//////                        }
////
////
////                        }
//                    }
//                    
//                };
//                    
//                        ButtonColumn btcl = new ButtonColumn(jTable2,delete, 7);
                        row [0]=j++;
                        row [1]= sunday_tasks.get(i).getTask_name();
                        row [2]= sunday_tasks.get(i).getTask_type();
                        row [3]= sunday_tasks.get(i).getTask_category();
                        row [4]= sunday_tasks.get(i).getTask_sub_cat();
                        row [5]= sunday_tasks.get(i).getTask_priority();
                        row [6]= sunday_tasks.get(i).getTask_link();
                        row [7]= sunday_tasks.get(i).getTask_url();
                        
                        model.addRow(row);
                };
 
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed
//    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {   
//         jTable2.addMouseListener(new MouseAdapter() {
//        public void mouseClicked(MouseEvent e) {
//            if (e.getClickCount() == 2) {
//                int selectedRow = jTable2.getSelectedRow();
//                String loc = (String) jTable2.getValueAt(selectedRow, 7);
//                
//               // String loc1 = loc.replace("\\", "\\");
//                //System.out.println(loc);
//               try {
//                   int count=1;
//                   //Desktop.getDesktop().open(new File((String) jTable2.getValueAt(selectedRow, 3)));
//                   while( count>0){
//                   Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+loc);
//                   count--;
////                    try {
////                        p.waitFor();
////                    } catch (InterruptedException ex) {
////                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
////                    }
////                   }
//               } }catch (IOException e1) {
//                   e1.printStackTrace();
//               }
//               
//            }
//        }
//        } );
//    }
    //Delete Task code
    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
//        int selectedRow = jTable2.getSelectedRow();
//        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
//        List rtrv_item=model.getDataVector();
//        Iterator it = rtrv_item.iterator();
//        while(it.hasNext()){
//            TaskDetails tt = (TaskDetails) it.next();
//            System.out.println(tt.getTask_name());}
//        
//        Object delete_item=null;
//        for (int j = 0; j < model.getColumnCount(); j++) {
//            delete_item = model.getValueAt(selectedRow, j);
////         TaskDetails ts = (TaskDetails) delete_item ;
//           // System.out.println(delete_item.getTask_category());
//        }
//        Unmarshalling unm = new Unmarshalling();
//        List<TaskDetails> avail_item = unm.retriveFromXML();
//        Iterator itr = avail_item.iterator();
//        while (itr.hasNext()) {
//            TaskDetails next_name = (TaskDetails) itr.next();
//            Object obj = next_name;
//            System.out.println(obj);
//            
//        }
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
